import scope::*;
import fmt::StringBuilder;

fn emit_unary(inst: str, operand: Value, code: *mut fmt::StringBuilder, comment: *const str) {
  if comment {
    code.appendf("% % ; %\n", (inst, operand, *comment), FormatOptions::default());
  } else {
    code.appendf("% %\n", (inst, operand), FormatOptions::default());
  }
}

fn emit_binary(inst: str, dest: Value, src: Value, code: *mut fmt::StringBuilder, comment: *const str) {
  if comment {
    code.appendf("% %, % ; %\n", (inst, dest, src, *comment), FormatOptions::default());
  } else {
    code.appendf("% %, %\n", (inst, dest, src), FormatOptions::default());
  }
}

fn emit_nullary(inst: str, code: *mut fmt::StringBuilder, comment: *const str) {
  if comment {
    code.appendf("% ; %\n", (inst, *comment), FormatOptions::default());
  } else {
    code.appendf("%\n", (inst,), FormatOptions::default());
  }
}